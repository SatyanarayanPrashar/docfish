{
    "file_structure": "\u2514\u2500\u2500 Agentic-Ai-Project\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 app.py\n    \u251c\u2500\u2500 requirements.txt\n    \u2514\u2500\u2500 src\n        \u251c\u2500\u2500 __init__.py\n        \u251c\u2500\u2500 __pycache__\n        \u2502   \u2514\u2500\u2500 __init__.cpython-312.pyc\n        \u2514\u2500\u2500 langgraphagenticai\n            \u251c\u2500\u2500 LLMS\n            \u2502   \u251c\u2500\u2500 __init__.py\n            \u2502   \u251c\u2500\u2500 __pycache__\n            \u2502   \u2502   \u251c\u2500\u2500 __init__.cpython-312.pyc\n            \u2502   \u2502   \u2514\u2500\u2500 groqllm.cpython-312.pyc\n            \u2502   \u2514\u2500\u2500 groqllm.py\n            \u251c\u2500\u2500 __init__.py\n            \u251c\u2500\u2500 __pycache__\n            \u2502   \u251c\u2500\u2500 __init__.cpython-312.pyc\n            \u2502   \u2514\u2500\u2500 main.cpython-312.pyc\n            \u251c\u2500\u2500 graph\n            \u2502   \u251c\u2500\u2500 __init__.py\n            \u2502   \u251c\u2500\u2500 __pycache__\n            \u2502   \u2502   \u251c\u2500\u2500 __init__.cpython-312.pyc\n            \u2502   \u2502   \u2514\u2500\u2500 graph_builder.cpython-312.pyc\n            \u2502   \u2514\u2500\u2500 graph_builder.py\n            \u251c\u2500\u2500 main.py\n            \u251c\u2500\u2500 nodes\n            \u2502   \u251c\u2500\u2500 __init__.py\n            \u2502   \u251c\u2500\u2500 __pycache__\n            \u2502   \u2502   \u251c\u2500\u2500 __init__.cpython-312.pyc\n            \u2502   \u2502   \u251c\u2500\u2500 basic_chatbot_node.cpython-312.pyc\n            \u2502   \u2502   \u2514\u2500\u2500 chatbot_with_Tool_node.cpython-312.pyc\n            \u2502   \u251c\u2500\u2500 basic_chatbot_node.py\n            \u2502   \u2514\u2500\u2500 chatbot_with_Tool_node.py\n            \u251c\u2500\u2500 state\n            \u2502   \u251c\u2500\u2500 __init__.py\n            \u2502   \u251c\u2500\u2500 __pycache__\n            \u2502   \u2502   \u251c\u2500\u2500 __init__.cpython-312.pyc\n            \u2502   \u2502   \u2514\u2500\u2500 state.cpython-312.pyc\n            \u2502   \u2514\u2500\u2500 state.py\n            \u251c\u2500\u2500 tools\n            \u2502   \u251c\u2500\u2500 __init__.py\n            \u2502   \u251c\u2500\u2500 __pycache__\n            \u2502   \u2502   \u251c\u2500\u2500 __init__.cpython-312.pyc\n            \u2502   \u2502   \u2514\u2500\u2500 serach_tool.cpython-312.pyc\n            \u2502   \u2514\u2500\u2500 serach_tool.py\n            \u251c\u2500\u2500 ui\n            \u2502   \u251c\u2500\u2500 __init__.py\n            \u2502   \u251c\u2500\u2500 __pycache__\n            \u2502   \u2502   \u251c\u2500\u2500 __init__.cpython-312.pyc\n            \u2502   \u2502   \u2514\u2500\u2500 uiconfigfile.cpython-312.pyc\n            \u2502   \u251c\u2500\u2500 streamlitui\n            \u2502   \u2502   \u251c\u2500\u2500 __pycache__\n            \u2502   \u2502   \u2502   \u251c\u2500\u2500 display_result.cpython-312.pyc\n            \u2502   \u2502   \u2502   \u2514\u2500\u2500 loadui.cpython-312.pyc\n            \u2502   \u2502   \u251c\u2500\u2500 display_result.py\n            \u2502   \u2502   \u2514\u2500\u2500 loadui.py\n            \u2502   \u251c\u2500\u2500 uiconfigfile.ini\n            \u2502   \u2514\u2500\u2500 uiconfigfile.py\n            \u2514\u2500\u2500 vectorstore\n                \u2514\u2500\u2500 __init__.py\n",
    "step1": "Document the main entry point of the application in app.py. Key_terms: load_langgraph_agenticai_app.",
    "step2": "Document the dependencies required for the project from requirements.txt. Key_terms: langchain, langgraph, streamlit.",
    "step3": "Document the load_langgraph_agenticai_app function in main.py. Key_terms: load_langgraph_agenticai_app, user_input, GroqLLM, GraphBuilder.",
    "step4": "Document the GraphBuilder class and its methods in graph_builder.py. Key_terms: GraphBuilder, basic_chatbot_build_graph, chatbot_with_tools_build_graph, setup_graph.",
    "step5": "Document the BasicChatbotNode class and its process method. Key_terms: BasicChatbotNode, process.",
    "step6": "Document the ChatbotWithToolNode class and its methods process and create_chatbot. Key_terms: ChatbotWithToolNode, process, create_chatbot.",
    "step7": "Document the functions get_tools and create_tool_node in serach_tool.py. Key_terms: get_tools, create_tool_node.",
    "step8": "Document the LoadStreamlitUI class and its methods in loadui.py. Key_terms: LoadStreamlitUI, load_streamlit_ui, initialize_session.",
    "step9": "Document the DisplayResultStreamlit class and its display_result_on_ui method. Key_terms: DisplayResultStreamlit, display_result_on_ui.",
    "step10": "Document the Config class and its methods in uiconfigfile.py. Key_terms: Config, get_llm_options, get_usecase_options, get_groq_model_options, get_page_title."
}